services:
  - id: kf-api
    name: smart-kf/kf-api
    path: /www/kf-api
    buildScript: |
      git pull
      USERNAME="smart-kf"
      REPO="kf-api"
      TAR_NAME="app.tar.gz"
      rm -rf bin && mkdir -p bin
      LATEST_RELEASE=$(curl -s "https://api.github.com/repos/$USERNAME/$REPO/releases/latest" | grep "tag_name" | sed -E 's/.*"([^"]+)".*/\1/')
      URL=https://github.com/$USERNAME/$REPO/releases/download/$LATEST_RELEASE/$TAR_NAME
      echo "download file: $URL"
      curl -o $TAR_NAME -sSL https://github.com/$USERNAME/$REPO/releases/download/$LATEST_RELEASE/$TAR_NAME
      tar -zxvf $TAR_NAME
      make build-image
      rm -rf bin
      rm -rf $TAR_NAME
    deployScript: |
      git pull
      docker compose stop && docker compose rm -f && docker compose up -d
  - id: kf-manager-dist
    name: smart-kf/kf-manager
    path: /www/kf-manager-dist
    buildScript: |
      set -ex
      rm -rf ./*
      USERNAME="smart-kf"
      REPO="kf-manager"
      TAR_NAME="dist.tar.gz"
      # 获取最新release的信息
      LATEST_RELEASE=$(curl -s "https://api.github.com/repos/$USERNAME/$REPO/releases/latest" | grep "tag_name" | sed -E 's/.*"([^"]+)".*/\1/')
      curl -o $TAR_NAME -sSL https://github.com/smart-kf/kf-manager/releases/download/$LATEST_RELEASE/$TAR_NAME
      tar -zxvf dist.tar.gz 
      mv dist/* .
      rm -rf dist $TAR_NAME
    deployScript: |
      set -ex
      echo 'already deployed'

  - id: socket-server
    name: smart-kf/socket-server
    path: /www/socket-server
    buildScript: |
      pwd && ls -al
      git pull
      set -ex
      USERNAME="smart-kf"
      REPO="socket-server"
      TAR_NAME="socket-server.tar.gz"
      # 获取最新release的信息
      LATEST_RELEASE=$(curl -s "https://api.github.com/repos/$USERNAME/$REPO/releases/latest" | grep "tag_name" | sed -E 's/.*"([^"]+)".*/\1/')
      curl -o $TAR_NAME -sSL https://github.com/$USERNAME/$REPO/releases/download/$LATEST_RELEASE/$TAR_NAME
      rm -rf bin
      tar -zxvf $TAR_NAME
      # 构建镜像
      make build-image
      rm -rf $TAR_NAME
    deployScript: |
      git pull
      pwd
      make reload

  - id: socket-server-manaue
    name: socket-server-manaue
    path: /www/socket-server
    buildScript: |
      pwd && ls -al
      git pull
      set -ex
      # 构建镜像
      make build
      make build-image
    deployScript: |
      git pull
      pwd
      make reload
